{"version":3,"file":"static/js/882.70b8b160.chunk.js","mappings":"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","sources":["app/screens/ManualGSI.js","../node_modules/react-router-dom/modules/BrowserRouter.js","../node_modules/react-router-dom/modules/HashRouter.js","../node_modules/react-router-dom/modules/utils/locationUtils.js","../node_modules/react-router-dom/modules/Link.js","../node_modules/react-router-dom/modules/NavLink.js","../node_modules/tiny-warning/dist/tiny-warning.esm.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport  { Form } from 'react-bootstrap'\r\nimport './CustomCssFile.css'\r\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min'\r\n\r\n\r\n\r\nconst ManualGSI = () => {\r\n  const navigate =useHistory()\r\n    \r\n  const [getByGSO, setGetByGSO]= useState([])\r\n  const [compList, setCompList]= useState([])\r\n  const [compTable, setCompTable]= useState(false)\r\n  const [gsoTable, setGsoTable]= useState(false)\r\n  const [inputValue, setInputValue]=useState({\r\n    GSONo:'',\r\n    pureGoldValueQnty:'',\r\n    pureGoldValueAmt:'',\r\n    compType:'',\r\n    compName:'',\r\n    compQnty:'',\r\n    compAmt:'',\r\n  })\r\n\r\n\r\n  //==============|| to handel input cahnges ||=============//\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setInputValue({\r\n      ...inputValue, \r\n      [name]: value,\r\n    });\r\n  };\r\n  \r\n  //==============|| to handel input cahnges ||=============//\r\n\r\n  const RerouteToViewPage =()=>{\r\n    navigate.push('/gold-smith/GSOrder-view')\r\n  \r\n   } \r\n  //==============|| to fetch based on GSO no ||=============//\r\n  const getGSO=(e)=>{\r\n    e.preventDefault()\r\n    console.log(inputValue.GSONo);\r\n    fetch(`http://localhost:4000/GSO/GetSpecificGSOrder/${inputValue.GSONo}`)\r\n    .then(response => response.json())\r\n    .then(data =>{\r\n        setGetByGSO(data)\r\n        console.log(getByGSO);\r\n        if(data){\r\n            setGsoTable(true)\r\n            setInputValue({ GSONo:'',})\r\n        }else{\r\n            alert('Enter A valid Order Number')\r\n            setInputValue({ GSONo:'',})\r\n        }\r\n    }) \r\n    .catch(error => {\r\n      console.error('Error fetching user data:', error);\r\n    });\r\n}\r\n\r\n\r\n//==============||To add new COmponent ||=============//\r\nconst addComp = (e)=>{\r\n    e.preventDefault()\r\n    setCompTable(true)\r\n    const arrayOfComponents={\r\n      compType:inputValue.compType,\r\n      compName:inputValue.compName,\r\n      compQnty:inputValue.compQnty,\r\n      compAmt:inputValue.compAmt,\r\n    }\r\n    setCompList([...compList, arrayOfComponents])\r\n  }\r\n\r\n    const pushToDB = async(e)=>{\r\n        e.preventDefault()\r\n        const {pureGoldValueQnty, pureGoldValueAmt} =inputValue\r\n        console.log({\r\n          GSOrderNo:getByGSO.GSOrderNo,\r\n          GSName:getByGSO.GSName,\r\n          pureGoldValueQnty,\r\n          pureGoldValueAmt,\r\n          components:compList\r\n        });\r\n    \r\n        // ========= || Push the Data to DB || ===========//\r\n    \r\n        // const {pureGoldValueQnty, pureGoldValueAmt} =inputValue\r\n    \r\n        // const res =await fetch('http://localhost:4000/GSI/createGSI',{\r\n        //   method:'POST',\r\n        //   headers:{\r\n        //     \"content-type\":\"application/json\"\r\n        //   },\r\n        //   body:JSON.stringify({\r\n        //     GSOrderNo:getByGSO.GSOrderNo,\r\n        //     GSName:getByGSO.GSName,\r\n        //     pureGoldValueQnty,\r\n        //     pureGoldValueAmt,\r\n        //     components:compList\r\n        //   })\r\n        // })\r\n        // const data = await res.json();\r\n        // console.log(data)\r\n        // alert(\"Material issued successfully \")\r\n      }\r\n\r\n    return(\r\n        <>\r\n        \r\n        {/* <div className=\"page-header\">\r\n          <h3 className=\"page-title\"> Gold Smith Issuance for GSO NO: {data.OrderNo}</h3>\r\n          <h3 className=\"page-title\"> Gold Smith Issuance </h3>\r\n        </div> */}\r\n\r\n        <div className=\"row\">                       \r\n        <div className=\"col-lg-12 grid-margin stretch-card\">\r\n            <div className=\"card\">\r\n              <div className=\"card-body\">\r\n              <h3 className=\"card-title\">Gold Smith Issuance </h3>\r\n                <form className='forms-sample'>\r\n                    <div className='row'>\r\n                        <div className='col-md-6'>\r\n                          <p className='text-warning'>No Gold Smith Order Selected, go to Gold Smith View Page and Select Gold Smith Order.</p>\r\n                        <Form.Group>\r\n                        <button type=\"submit\" onClick={RerouteToViewPage} className=\"btn btn-outline-primary mr-4\">Go To GS View Page.</button>\r\n                            {/* <div className=\"input-group\">\r\n                                <Form.Control autoComplete='off' type=\"text\" value={inputValue.orderNo} onChange={handleInputChange} name='orderNo' className=\"form-control\" placeholder=\"Search by Order Number\"/>\r\n                                <div className=\"input-group-append\">\r\n                                    <button className=\"btn btn-sm btn-primary\" onClick={getByOrderNo}>Search</button>\r\n                                </div>\r\n                            </div> */}\r\n                        </Form.Group>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n        </div> \r\n\r\n        {\r\n            gsoTable?\r\n        <div className=\"col-12 grid-margin stretch-card\">\r\n            <div className=\"card\">\r\n              <div className=\"card-body\">\r\n                <h4 className=\"card-title\">GSO Number: <span className='text-primary'>{getByGSO.GSOrderNo}</span></h4>\r\n                <h5 className=\"card-title\">Gold Smith Name: <span className='text-primary'>{getByGSO.GSName}</span></h5>\r\n                <div className='table-responsive OFtable-res'>\r\n                  <table className=\"table table-bordered OFtable \">\r\n                    <thead>\r\n                      <tr>\r\n                        <th>SL.NO</th>\r\n                        <th>Sub Order Number</th>\r\n                        <th>Item Name</th>\r\n                        <th>Available Quantity</th>\r\n                        <th>Allocated Quantity</th>\r\n                        <th>Pending Quantity</th>\r\n                        <th>Allocated Weight </th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {\r\n                        getByGSO&&getByGSO.subOrder.map((order,index,key)=>{\r\n                          return<>\r\n                            <tr key={key}>\r\n                              <td>{index+1}</td>\r\n                              <td>{order.subOrderNo}</td>\r\n                              <td>{order.ItemName}</td>\r\n                              <td>{order.availQuantity}</td>\r\n                              <td>{order.allocdQty}</td>\r\n                              <td>{order.pendingQuantity}</td>\r\n                              <td>{order.allocdWt}</td>\r\n                            </tr>\r\n                          </>\r\n                        })\r\n                      }\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n            </div>\r\n        </div>\r\n          :''\r\n        }\r\n        </div>\r\n\r\n        <div className=\"row showStoneProperties\">                       \r\n          <div className=\"col-md-6 grid-margin stretch-card\">\r\n            <div className=\"card\">\r\n              <div className=\"card-body\">\r\n                <h4 className=\"card-title\">pure gold</h4>\r\n                 <form className=\"forms-sample\">\r\n                  <div className=\"col-md-12\">\r\n                    <Form.Group className=\"row\">\r\n                        <label  htmlFor=\"goldQuantity\" className=\"col-sm-4 col-form-label\">Gold Quantity </label>\r\n                        <div className=\"col-sm-8\">\r\n                            <Form.Control  type=\"text\"   name='pureGoldValueQnty' value={inputValue.pureGoldValueQnty} onChange={handleInputChange}  className=\"form-control\" id=\"goldQuantity\" placeholder=\"Gold Quantity\" />\r\n                        </div>\r\n                    </Form.Group>\r\n                  </div>\r\n                  <div className=\"col-md-12\">\r\n                    <Form.Group className=\"row\">\r\n                        <label  htmlFor=\"goldAmount\" className=\"col-sm-4 col-form-label\">Gold Amount </label>\r\n                        <div className=\"col-sm-8\">\r\n                            <Form.Control  type=\"text\"   name='pureGoldValueAmt' value={inputValue.pureGoldValueAmt} onChange={handleInputChange} className=\"form-control\" id=\"goldAmount\" placeholder=\"Gold Amount\" />\r\n                        </div>\r\n                    </Form.Group>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n            <div className=\"col-6 grid-margin stretch-card\">\r\n              <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                  <h4 className=\"card-title\">Components</h4>\r\n                  <form className=\"forms-sample\">\r\n                  <div className=\"col-md-12\">\r\n                    <Form.Group className=\"row\">\r\n                        <label  htmlFor=\"compType\" className=\"col-sm-4 col-form-label\">Component Type </label>\r\n                        <div className=\"col-sm-8\">\r\n                            <select  type=\"text\" name='compType' value={inputValue.compType} onChange={handleInputChange}   className=\"form-control\" id=\"compType\" placeholder=\"Component Type\">\r\n                              <option value=''>Select</option>\r\n                              <option value='Metal'>Metal</option>\r\n                              <option value='Non metal'>Non Metal</option>\r\n                              <option value='Stones'>Stones</option>\r\n                            </select>\r\n                        </div>\r\n                    </Form.Group>\r\n                  </div>\r\n                  <div className=\"col-md-12\">\r\n                    <Form.Group className=\"row\">\r\n                        <label  htmlFor=\"compName\" className=\"col-sm-4 col-form-label\">Component Name </label>\r\n                        <div className=\"col-sm-8\">\r\n                            <Form.Control  type=\"text\"   name='compName' value={inputValue.compName} onChange={handleInputChange} className=\"form-control\" id=\"compName\" placeholder=\"Component Name\" />\r\n                        </div>\r\n                    </Form.Group>\r\n                  </div>\r\n                  <div className=\"col-md-12\">\r\n                    <Form.Group className=\"row\">\r\n                        <label  htmlFor=\"compQuantity\" className=\"col-sm-4 col-form-label\">Componemt Quantity </label>\r\n                        <div className=\"col-sm-8\">\r\n                            <Form.Control  type=\"text\"   name='compQnty' value={inputValue.compQnty} onChange={handleInputChange}  className=\"form-control\" id=\"compQuantity\" placeholder=\"Componemt Quantity\" />\r\n                        </div>\r\n                    </Form.Group>\r\n                  </div>\r\n                  <div className=\"col-md-12\">\r\n                    <Form.Group className=\"row\">\r\n                        <label  htmlFor=\"compamount\" className=\"col-sm-4 col-form-label\">Componemt Amount </label>\r\n                        <div className=\"col-sm-8\">\r\n                            <Form.Control  type=\"text\"   name='compAmt' value={inputValue.compAmt} onChange={handleInputChange}  className=\"form-control\" id=\"compamount\" placeholder=\"Componemt Amount\" />\r\n                        </div>\r\n                    </Form.Group>\r\n                  </div>\r\n                  <button type=\"submit\" onClick={addComp}  className=\"btn btn-primary mr-4\">Add  another component</button>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {\r\n            compTable?\r\n            <div className=\"row\">                       \r\n            <div className=\"col-12 grid-margin stretch-card\">\r\n              <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                  <h4 className=\"card-title\">Components List</h4>\r\n                  <div className=\"table-responsive OFtable-res \">\r\n                    <table className=\"table table-bordered OFtable \">\r\n                      <thead>\r\n                        <th>SL.No</th>\r\n                        <th>component Type</th>\r\n                        <th>component Name</th>\r\n                        <th>component Quantity</th>\r\n                      </thead>\r\n                      <tbody>\r\n                        {\r\n                          compList.map((comp, index)=>{\r\n                            return<>\r\n                            <tr>\r\n                              <td>{index+1}</td>\r\n                              <td>{comp.compType}</td>\r\n                              <td>{comp.compName}</td>\r\n                              <td>{comp.compQnty}</td>\r\n                            </tr>\r\n                            </>\r\n                          })\r\n                        }\r\n                      </tbody>\r\n                    </table>\r\n                  </div>\r\n                  <div style={{margin:\"2%  0 0 95%\"}}>\r\n                    <button type=\"submit\" onClick={pushToDB}  className=\"btn btn-primary mr-4\">Issue</button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          :''\r\n          }\r\n      </>  \r\n    )\r\n}\r\n\r\nexport default ManualGSI\r\n","import React from \"react\";\nimport { Router } from \"react-router\";\nimport { createBrowserHistory as createHistory } from \"history\";\nimport PropTypes from \"prop-types\";\nimport warning from \"tiny-warning\";\n\n/**\n * The public API for a <Router> that uses HTML5 history.\n */\nclass BrowserRouter extends React.Component {\n  history = createHistory(this.props);\n\n  render() {\n    return <Router history={this.history} children={this.props.children} />;\n  }\n}\n\nif (__DEV__) {\n  BrowserRouter.propTypes = {\n    basename: PropTypes.string,\n    children: PropTypes.node,\n    forceRefresh: PropTypes.bool,\n    getUserConfirmation: PropTypes.func,\n    keyLength: PropTypes.number\n  };\n\n  BrowserRouter.prototype.componentDidMount = function() {\n    warning(\n      !this.props.history,\n      \"<BrowserRouter> ignores the history prop. To use a custom history, \" +\n        \"use `import { Router }` instead of `import { BrowserRouter as Router }`.\"\n    );\n  };\n}\n\nexport default BrowserRouter;\n","import React from \"react\";\nimport { Router } from \"react-router\";\nimport { createHashHistory as createHistory } from \"history\";\nimport PropTypes from \"prop-types\";\nimport warning from \"tiny-warning\";\n\n/**\n * The public API for a <Router> that uses window.location.hash.\n */\nclass HashRouter extends React.Component {\n  history = createHistory(this.props);\n\n  render() {\n    return <Router history={this.history} children={this.props.children} />;\n  }\n}\n\nif (__DEV__) {\n  HashRouter.propTypes = {\n    basename: PropTypes.string,\n    children: PropTypes.node,\n    getUserConfirmation: PropTypes.func,\n    hashType: PropTypes.oneOf([\"hashbang\", \"noslash\", \"slash\"])\n  };\n\n  HashRouter.prototype.componentDidMount = function() {\n    warning(\n      !this.props.history,\n      \"<HashRouter> ignores the history prop. To use a custom history, \" +\n        \"use `import { Router }` instead of `import { HashRouter as Router }`.\"\n    );\n  };\n}\n\nexport default HashRouter;\n","import { createLocation } from \"history\";\n\nexport const resolveToLocation = (to, currentLocation) =>\n  typeof to === \"function\" ? to(currentLocation) : to;\n\nexport const normalizeToLocation = (to, currentLocation) => {\n  return typeof to === \"string\"\n    ? createLocation(to, null, null, currentLocation)\n    : to;\n};\n","import React from \"react\";\nimport { __RouterContext as RouterContext } from \"react-router\";\nimport { createPath } from 'history';\nimport PropTypes from \"prop-types\";\nimport invariant from \"tiny-invariant\";\nimport {\n  resolveToLocation,\n  normalizeToLocation\n} from \"./utils/locationUtils.js\";\n\n// React 15 compat\nconst forwardRefShim = C => C;\nlet { forwardRef } = React;\nif (typeof forwardRef === \"undefined\") {\n  forwardRef = forwardRefShim;\n}\n\nfunction isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nconst LinkAnchor = forwardRef(\n  (\n    {\n      innerRef, // TODO: deprecate\n      navigate,\n      onClick,\n      ...rest\n    },\n    forwardedRef\n  ) => {\n    const { target } = rest;\n\n    let props = {\n      ...rest,\n      onClick: event => {\n        try {\n          if (onClick) onClick(event);\n        } catch (ex) {\n          event.preventDefault();\n          throw ex;\n        }\n\n        if (\n          !event.defaultPrevented && // onClick prevented default\n          event.button === 0 && // ignore everything but left clicks\n          (!target || target === \"_self\") && // let browser handle \"target=_blank\" etc.\n          !isModifiedEvent(event) // ignore clicks with modifier keys\n        ) {\n          event.preventDefault();\n          navigate();\n        }\n      }\n    };\n\n    // React 15 compat\n    if (forwardRefShim !== forwardRef) {\n      props.ref = forwardedRef || innerRef;\n    } else {\n      props.ref = innerRef;\n    }\n\n    /* eslint-disable-next-line jsx-a11y/anchor-has-content */\n    return <a {...props} />;\n  }\n);\n\nif (__DEV__) {\n  LinkAnchor.displayName = \"LinkAnchor\";\n}\n\n/**\n * The public API for rendering a history-aware <a>.\n */\nconst Link = forwardRef(\n  (\n    {\n      component = LinkAnchor,\n      replace,\n      to,\n      innerRef, // TODO: deprecate\n      ...rest\n    },\n    forwardedRef\n  ) => {\n    return (\n      <RouterContext.Consumer>\n        {context => {\n          invariant(context, \"You should not use <Link> outside a <Router>\");\n\n          const { history } = context;\n\n          const location = normalizeToLocation(\n            resolveToLocation(to, context.location),\n            context.location\n          );\n\n          const href = location ? history.createHref(location) : \"\";\n          const props = {\n            ...rest,\n            href,\n            navigate() {\n              const location = resolveToLocation(to, context.location);\n              const isDuplicateNavigation = createPath(context.location) === createPath(normalizeToLocation(location));\n              const method = (replace || isDuplicateNavigation) ? history.replace : history.push;\n\n              method(location);\n            }\n          };\n\n          // React 15 compat\n          if (forwardRefShim !== forwardRef) {\n            props.ref = forwardedRef || innerRef;\n          } else {\n            props.innerRef = innerRef;\n          }\n\n          return React.createElement(component, props);\n        }}\n      </RouterContext.Consumer>\n    );\n  }\n);\n\nif (__DEV__) {\n  const toType = PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.object,\n    PropTypes.func\n  ]);\n  const refType = PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.any })\n  ]);\n\n  Link.displayName = \"Link\";\n\n  Link.propTypes = {\n    innerRef: refType,\n    onClick: PropTypes.func,\n    replace: PropTypes.bool,\n    target: PropTypes.string,\n    to: toType.isRequired\n  };\n}\n\nexport default Link;\n","import React from \"react\";\nimport { __RouterContext as RouterContext, matchPath } from \"react-router\";\nimport PropTypes from \"prop-types\";\nimport invariant from \"tiny-invariant\";\nimport Link from \"./Link.js\";\nimport {\n  resolveToLocation,\n  normalizeToLocation\n} from \"./utils/locationUtils.js\";\n\n// React 15 compat\nconst forwardRefShim = C => C;\nlet { forwardRef } = React;\nif (typeof forwardRef === \"undefined\") {\n  forwardRef = forwardRefShim;\n}\n\nfunction joinClassnames(...classnames) {\n  return classnames.filter(i => i).join(\" \");\n}\n\n/**\n * A <Link> wrapper that knows if it's \"active\" or not.\n */\nconst NavLink = forwardRef(\n  (\n    {\n      \"aria-current\": ariaCurrent = \"page\",\n      activeClassName = \"active\", // TODO: deprecate\n      activeStyle, // TODO: deprecate\n      className: classNameProp,\n      exact,\n      isActive: isActiveProp,\n      location: locationProp,\n      sensitive,\n      strict,\n      style: styleProp,\n      to,\n      innerRef, // TODO: deprecate\n      ...rest\n    },\n    forwardedRef\n  ) => {\n    return (\n      <RouterContext.Consumer>\n        {context => {\n          invariant(context, \"You should not use <NavLink> outside a <Router>\");\n\n          const currentLocation = locationProp || context.location;\n          const toLocation = normalizeToLocation(\n            resolveToLocation(to, currentLocation),\n            currentLocation\n          );\n          const { pathname: path } = toLocation;\n          // Regex taken from: https://github.com/pillarjs/path-to-regexp/blob/master/index.js#L202\n          const escapedPath =\n            path && path.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, \"\\\\$1\");\n\n          const match = escapedPath\n            ? matchPath(currentLocation.pathname, {\n                path: escapedPath,\n                exact,\n                sensitive,\n                strict\n              })\n            : null;\n          const isActive = !!(isActiveProp\n            ? isActiveProp(match, currentLocation)\n            : match);\n\n          let className =\n            typeof classNameProp === \"function\"\n              ? classNameProp(isActive)\n              : classNameProp;\n\n          let style =\n            typeof styleProp === \"function\" ? styleProp(isActive) : styleProp;\n\n          if (isActive) {\n            className = joinClassnames(className, activeClassName);\n            style = { ...style, ...activeStyle };\n          }\n\n          const props = {\n            \"aria-current\": (isActive && ariaCurrent) || null,\n            className,\n            style,\n            to: toLocation,\n            ...rest\n          };\n\n          // React 15 compat\n          if (forwardRefShim !== forwardRef) {\n            props.ref = forwardedRef || innerRef;\n          } else {\n            props.innerRef = innerRef;\n          }\n\n          return <Link {...props} />;\n        }}\n      </RouterContext.Consumer>\n    );\n  }\n);\n\nif (__DEV__) {\n  NavLink.displayName = \"NavLink\";\n\n  const ariaCurrentType = PropTypes.oneOf([\n    \"page\",\n    \"step\",\n    \"location\",\n    \"date\",\n    \"time\",\n    \"true\",\n    \"false\"\n  ]);\n\n  NavLink.propTypes = {\n    ...Link.propTypes,\n    \"aria-current\": ariaCurrentType,\n    activeClassName: PropTypes.string,\n    activeStyle: PropTypes.object,\n    className: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n    exact: PropTypes.bool,\n    isActive: PropTypes.func,\n    location: PropTypes.object,\n    sensitive: PropTypes.bool,\n    strict: PropTypes.bool,\n    style: PropTypes.oneOfType([PropTypes.object, PropTypes.func])\n  };\n}\n\nexport default NavLink;\n","var isProduction = process.env.NODE_ENV === 'production';\nfunction warning(condition, message) {\n  if (!isProduction) {\n    if (condition) {\n      return;\n    }\n\n    var text = \"Warning: \" + message;\n\n    if (typeof console !== 'undefined') {\n      console.warn(text);\n    }\n\n    try {\n      throw Error(text);\n    } catch (x) {}\n  }\n}\n\nexport default warning;\n"],"names":["_ref","navigate","useHistory","_useState","useState","_useState2","_slicedToArray","getByGSO","_useState3","_useState4","compList","setCompList","_useState5","_useState6","compTable","setCompTable","_useState7","_useState8","gsoTable","_useState9","GSONo","pureGoldValueQnty","pureGoldValueAmt","compType","compName","compQnty","compAmt","_useState10","inputValue","setInputValue","handleInputChange","event","_event$target","target","name","value","_objectSpread","_defineProperty","React","className","Form","Group","type","onClick","push","GSOrderNo","GSName","subOrder","map","order","index","key","subOrderNo","ItemName","availQuantity","allocdQty","pendingQuantity","allocdWt","htmlFor","Control","onChange","id","placeholder","e","preventDefault","arrayOfComponents","concat","_toConsumableArray","comp","style","margin","_x","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","console","log","components","stop","apply","arguments","BrowserRouter","n","t","length","r","Array","o","call","history","createBrowserHistory","props","_inheritsLoose","prototype","render","createElement","reactRouter","Router","this","children","Component","HashRouter","createHashHistory","resolveToLocation","normalizeToLocation","createLocation","forwardRefShim","forwardRef","LinkAnchor","innerRef","a","_objectWithoutPropertiesLoose","i","c","_extends","defaultPrevented","button","metaKey","altKey","ctrlKey","shiftKey","isModifiedEvent","ref","Link","component","replace","u","to","f","s","__RouterContext","Consumer","invariant","location","createHref","href","createPath","forwardRefShim$1","forwardRef$1","NavLink","l","activeClassName","p","R","activeStyle","h","y","exact","d","isActive","m","v","sensitive","b","strict","P","w","x","g","pathname","matchPath","path","filter","join","joinClassnames","Object","enumerable","get","condition","message"],"sourceRoot":""}